==============================
reStructuredText快速指南(sphinx项目)
==============================

.. admonition:: 阅读前须知

  | *本文档语法适用于基于docutils模块的sphinx项目.*

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
01 标题
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

   - 标题文本 ``顶格写`` .
   - 标题文本下一行顶格写指定级别的标题符号.
   - 标题符号长度 ``不小于`` 标题文本长度.
  
- **源代码**
  
.. code-block:: RST

    一级标题文本
    =====================

    二级标题文本
    ~~~~~~~~~~~~~~~~~~~~~

    三级标题文本
    ------------------

    四级标题文本
    ^^^^^^^^^^^^^^^^^^^^^

    五级标题文本
    """""""""""""""""

    六级标题文本
    *****************

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
02 段落
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

    - 分行：缩进表示层级，同一行的文字缩进相等，精确分行使用 ``空行分隔`` 或者 ``|`` 符号.

- **源代码**

.. code-block:: rst

  这是第一行
  这也是第一行

  | 这是第一行
  | 这是第二行

  这是第一行

  这是第二行

- **实现效果**
   
  这是第一行
  这也是第一行

  | 这是第一行
  | 这是第二行

  这是第一行

  这是第二行

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
03 行内标记
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

    - 字符处理符号前后需要预留空格，否则不生效.

- **源代码**

.. code-block:: rst

  *斜体文本*

  **强调文本**

  ``高亮文本`` 

- **实现效果**

*斜体文本*

**强调文本**

``高亮文本`` 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
04 列表
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

   - 无序列表符号后需要 ``接一个空格``，支持符号 ``"* + -"``.
   - 有序列表符号后需要 ``接一个空格`` ， 支持 ``数字、大小写字母和罗马数字`` .
   - 变量定义列表中的 ``第一行为定义行顶格写，下一行开始为解释行，需要缩进`` ，同一缩进量表示同一行文本，分行使用空行分割.


- **源代码**

.. code-block:: rst

    无序列表

    - test text
    - test text

    有序列表

    1. test text
    #. test text

    A. test text
    #. test text

    变量列表

    这里是定义变量1的标识
      这里是定义变量1的文本解释内容

    这里是定义变量2的标识
      这里是定义变量2的文本解释内容

- **实现效果**
  
无序列表

- test text
- test text

有序列表

1. test text
#. test text

A. test text
#. test text

变量列表

这里是定义变量1的标识
  这里是定义变量1的文本解释内容

这里是定义变量2的标识
  这里是定义变量2的文本解释内容

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
05 参考链接 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

    - 参考链接分为内部链接和外部链接，内部链接直接调用，外部链接需要预定义再引用.

.. code-block:: rst

    内部链接通用格式：`链接显示文本 <链接地址>`_

    外部链接通用格式：

        预定义步骤：.. _链接显示文本: 链接地址

        引用步骤：`链接显示文本`_

- **源代码**

.. code-block:: rst

    内部链接：`python官网 <https://www.python.org/>`_   

    .. _python官网: https://www.python.org/

    外部链接：`python官网`_

- **实现效果**
  
内部链接：`python官网 <https://www.python.org/>`_   

.. _python官网: https://www.python.org/

外部链接：`python官网`_

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
06 图片指令
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

    - 可使用指令image或者figure，figure功能更加全面支持image的所有参数，并提供额外参数.

- **源代码**
  
.. code-block:: rst

  .. image:: ../../_static/restructuredtext/moon.webp
    :height: 100
    :width: 200
    :scale: 50 
    :alt: 资源不存在显示文本

- **实现效果**

.. image:: ../../_static/restructuredtext/moon.webp
  :height: 100
  :width: 200
  :scale: 50
  :alt: 资源不存在显示文本

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
07 提示块指令
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

    - 可使用预定义提示块指令和自定义提示块指令.
    - 预定义提示块指令有：note | attention | caution | warning | tip | important | hint | error | danger
    - 自定义提示块指令为：admonition

- **源代码**
  
.. code-block:: rst

  .. note:: 

    这是note内容.

  .. admonition:: 这是自定义标题

    这是admonition内容.

- **实现效果**

.. note:: 

  这是note内容.

.. admonition:: 这是自定义标题

  这是admonition内容.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
08 代码块指令
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

    - 全局代码配置指令为 ``highlight`` ，可选参数有 ``linenothreshold`` 控制代码行数显示门限 |  ``force`` 强制代码行数显示(优先级最高).
    - 代码块指令为 ``code-block`` , 可选参数有 ``linenos行数显示`` | ``emphasize-lines强调行`` | ``caption导航文本`` | ``name预定义引用名`` .
    - 外部引用代码指令为 ``literalinclude``.可选参数有code-block外的： ``encoding编码`` | ``lines引用指定行`` .
  
- **源代码**
  
.. code-block:: rst

  全局代码配置：

  .. highlight:: python
    :linenothreshold: 3

  代码块编写：

  .. code-block:: python
    :emphasize-lines: 1-2,5
    :caption: 这是一个python代码块的标题
    :name: test

    def main():
      print('#'*10)
      print('这是第三行.')
      print('这是第四行')
      print('这是第五行')

  引用外部代码：

    .. literalinclude:: index.rst
      :linenos:
      :language: rst
      :emphasize-lines: 1-7,10
      :encoding: utf-8
      :lines: 1-11

- **实现效果**

.. highlight:: python
  :linenothreshold: 3

代码块编写：

.. code-block:: python
  :emphasize-lines: 1-2,5
  :caption: 这是一个python代码块的标题
  :name: test

  def main():
    print('#'*10)
    print('这是第三行.')
    print('这是第四行')
    print('这是第五行')

引用外部代码：

  .. literalinclude:: index.rst
    :linenos:
    :language: rst
    :emphasize-lines: 1-7,10
    :encoding: utf-8
    :lines: 1-11



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
09 表格指令
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. admonition:: 语法要点

    - 可使用表格指令： ``table`` 常规表格 | ``list-table`` 列表表格 | ``csv-table`` CSV表格. 

- **源代码**
  
.. code-block:: rst

  .. table:: 常规表格

    =====  =====
    表头1  表头2
    =====  =====
    1-1    1-2
    2-1    2-2
    =====  =====

  .. list-table:: 列表表格
    :widths: 10 20  
    :header-rows: 1

    * - 表头1-宽度10
      - 表头2-宽度20
    * - 1-1
      - 1-2
    * - 2-1
      - 2-2

  .. csv-table:: CSV表格
    :header: "表头1", "表头2"
    :widths: 10, 10

    1-1, 1-2
    2-1, 2-2
    3-1, 3-2

- **实现效果**
  
.. table:: 常规表格

  =====  =====
  表头1  表头2
  =====  =====
  1-1    1-2
  2-1    2-2
  =====  =====

.. list-table:: 列表表格
  :widths: 10 20  
  :header-rows: 1

  * - 表头1-宽度10
    - 表头2-宽度20
  * - 1-1
    - 1-2
  * - 2-1
    - 2-2

.. csv-table:: CSV表格
  :header: "表头1", "表头2"
  :widths: 10, 10

  1-1, 1-2
  2-1, 2-2
  3-1, 3-2